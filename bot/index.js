const TelegramBot = require('node-telegram-bot-api');
const config = require('../config');

class Bot {
    constructor() {
        if (!config.telegram.token) {
            throw new Error('BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
        }

        this.bot = new TelegramBot(config.telegram.token, { polling: true });
        this.webAppUrl = config.app.url;
        
        this.setupCommands();
        this.setupHandlers();
    }

    setupCommands() {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
        this.bot.setMyCommands([
            { command: '/start', description: '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É' },
            { command: '/webapp', description: '–û—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ' },
            { command: '/help', description: '–ü–æ–º–æ—â—å' }
        ]);

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –º–µ–Ω—é
        this.bot.setMyDescription('P.I.D.R. - –£–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞—è –∏–≥—Ä–∞ –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏ –¥—Ä—É–∑–µ–π! üéÆ');
        this.bot.setMyShortDescription('–ò–≥—Ä–∞–π—Ç–µ –≤ P.I.D.R. —Å –¥—Ä—É–∑—å—è–º–∏!');
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –º–µ–Ω—é —Å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
        this.bot.setChatMenuButton({
            menu_button: {
                type: 'web_app',
                text: '–û—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É',
                web_app: { url: this.webAppUrl }
            }
        }).catch(error => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é:', error);
        });
    }

    setupHandlers() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
        this.bot.onText(/\/start/, (msg) => {
            const chatId = msg.chat.id;
            const keyboard = {
                inline_keyboard: [
                    [{
                        text: 'üéÆ –ò–≥—Ä–∞—Ç—å',
                        web_app: { url: this.webAppUrl }
                    }],
                    [{
                        text: 'üì¢ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π',
                        switch_inline_query: ''
                    }]
                ]
            };

            this.bot.sendMessage(chatId, 
                '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ P.I.D.R.!\n\n' +
                'üéÆ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ò–≥—Ä–∞—Ç—å" —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å\n' +
                'üì¢ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π –∏–≥—Ä—ã',
                { reply_markup: keyboard }
            );
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /webapp
        this.bot.onText(/\/webapp/, (msg) => {
            const chatId = msg.chat.id;
            const keyboard = {
                inline_keyboard: [[{
                    text: 'üéÆ –û—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É',
                    web_app: { url: this.webAppUrl }
                }]]
            };

            this.bot.sendMessage(chatId, 
                '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É:',
                { reply_markup: keyboard }
            );
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
        this.bot.onText(/\/help/, (msg) => {
            const chatId = msg.chat.id;
            this.bot.sendMessage(chatId,
                'üéÆ *P.I.D.R. - –ü–æ–º–æ—â—å*\n\n' +
                '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n' +
                '/start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É\n' +
                '/webapp - –û—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n' +
                '/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n' +
                '–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É –º–µ–Ω—é –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–≥—Ä–µ.',
                { parse_mode: 'Markdown' }
            );
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        this.bot.on('polling_error', (error) => {
            console.error('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
        });
    }
}

module.exports = new Bot(); 